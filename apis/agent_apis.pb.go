// Code generated by protoc-gen-go. DO NOT EDIT.
// source: agent_apis.proto

package apis

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// api命令， 封装各种部署与请求命令。 data通过json来封装有客户端和服务器端自行解析
type LBCommand struct {
	Cmd                  string   `protobuf:"bytes,1,opt,name=cmd,proto3" json:"cmd,omitempty"`
	Data                 []byte   `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	Context              []byte   `protobuf:"bytes,3,opt,name=context,proto3" json:"context,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LBCommand) Reset()         { *m = LBCommand{} }
func (m *LBCommand) String() string { return proto.CompactTextString(m) }
func (*LBCommand) ProtoMessage()    {}
func (*LBCommand) Descriptor() ([]byte, []int) {
	return fileDescriptor_3259007279805d82, []int{0}
}

func (m *LBCommand) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LBCommand.Unmarshal(m, b)
}
func (m *LBCommand) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LBCommand.Marshal(b, m, deterministic)
}
func (m *LBCommand) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LBCommand.Merge(m, src)
}
func (m *LBCommand) XXX_Size() int {
	return xxx_messageInfo_LBCommand.Size(m)
}
func (m *LBCommand) XXX_DiscardUnknown() {
	xxx_messageInfo_LBCommand.DiscardUnknown(m)
}

var xxx_messageInfo_LBCommand proto.InternalMessageInfo

func (m *LBCommand) GetCmd() string {
	if m != nil {
		return m.Cmd
	}
	return ""
}

func (m *LBCommand) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *LBCommand) GetContext() []byte {
	if m != nil {
		return m.Context
	}
	return nil
}

// api执行结果 msg 对结果的描述。 context 为传入时附带的内容
type LBCommandResult struct {
	Code                 int32    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg                  string   `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data                 []byte   `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	Context              []byte   `protobuf:"bytes,4,opt,name=context,proto3" json:"context,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LBCommandResult) Reset()         { *m = LBCommandResult{} }
func (m *LBCommandResult) String() string { return proto.CompactTextString(m) }
func (*LBCommandResult) ProtoMessage()    {}
func (*LBCommandResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_3259007279805d82, []int{1}
}

func (m *LBCommandResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LBCommandResult.Unmarshal(m, b)
}
func (m *LBCommandResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LBCommandResult.Marshal(b, m, deterministic)
}
func (m *LBCommandResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LBCommandResult.Merge(m, src)
}
func (m *LBCommandResult) XXX_Size() int {
	return xxx_messageInfo_LBCommandResult.Size(m)
}
func (m *LBCommandResult) XXX_DiscardUnknown() {
	xxx_messageInfo_LBCommandResult.DiscardUnknown(m)
}

var xxx_messageInfo_LBCommandResult proto.InternalMessageInfo

func (m *LBCommandResult) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *LBCommandResult) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func (m *LBCommandResult) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *LBCommandResult) GetContext() []byte {
	if m != nil {
		return m.Context
	}
	return nil
}

func init() {
	proto.RegisterType((*LBCommand)(nil), "apis.LBCommand")
	proto.RegisterType((*LBCommandResult)(nil), "apis.LBCommandResult")
}

func init() { proto.RegisterFile("agent_apis.proto", fileDescriptor_3259007279805d82) }

var fileDescriptor_3259007279805d82 = []byte{
	// 223 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x90, 0xc1, 0x4a, 0xc4, 0x30,
	0x14, 0x45, 0x8d, 0xad, 0x0e, 0x79, 0x28, 0x53, 0x02, 0x42, 0x70, 0x35, 0xd4, 0xcd, 0xac, 0xb2,
	0x70, 0x7e, 0xc0, 0xa9, 0xb8, 0x10, 0x5d, 0x94, 0xfc, 0x80, 0x64, 0x92, 0xc7, 0x28, 0x4c, 0x92,
	0xd2, 0xbc, 0x42, 0x3f, 0x5f, 0x12, 0xb5, 0xa0, 0xb8, 0x3b, 0x79, 0x8b, 0x7b, 0x6e, 0x2e, 0x34,
	0xe6, 0x88, 0x81, 0xde, 0xcc, 0xf0, 0x91, 0xd4, 0x30, 0x46, 0x8a, 0xa2, 0xce, 0xdc, 0xbe, 0x00,
	0x7f, 0xed, 0x1e, 0xa3, 0xf7, 0x26, 0x38, 0xd1, 0x40, 0x65, 0xbd, 0x93, 0x6c, 0xc3, 0xb6, 0x5c,
	0x67, 0x14, 0x02, 0x6a, 0x67, 0xc8, 0xc8, 0xf3, 0x0d, 0xdb, 0x5e, 0xe9, 0xc2, 0x42, 0xc2, 0xca,
	0xc6, 0x40, 0x38, 0x93, 0xac, 0xca, 0xf9, 0xe7, 0xd9, 0x22, 0xac, 0x97, 0x30, 0x8d, 0x69, 0x3a,
	0x51, 0x0e, 0xb0, 0xd1, 0x61, 0xc9, 0xbc, 0xd0, 0x85, 0xb3, 0xc6, 0xa7, 0x63, 0xc9, 0xe4, 0x3a,
	0xe3, 0xa2, 0xa9, 0xfe, 0xd7, 0xd4, 0xbf, 0x34, 0xf7, 0x0f, 0xc0, 0xbf, 0x25, 0x38, 0x8a, 0x1d,
	0xac, 0x9e, 0x66, 0xb4, 0x13, 0xa1, 0x58, 0xab, 0xf2, 0xbd, 0xa5, 0xc2, 0xed, 0xcd, 0x9f, 0xc3,
	0x57, 0xa7, 0xf6, 0xac, 0xbb, 0x83, 0xc6, 0x06, 0xf5, 0x4e, 0x23, 0x26, 0x65, 0x9c, 0x55, 0xe6,
	0x74, 0xe8, 0xae, 0xf7, 0x79, 0xa1, 0x7d, 0xff, 0xdc, 0xe7, 0x79, 0x7a, 0x76, 0xb8, 0x2c, 0x3b,
	0xed, 0x3e, 0x03, 0x00, 0x00, 0xff, 0xff, 0x17, 0xf1, 0x3b, 0x49, 0x3b, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// CommanderClient is the client API for Commander service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CommanderClient interface {
	// Sends a greeting
	Execute(ctx context.Context, in *LBCommand, opts ...grpc.CallOption) (*LBCommandResult, error)
}

type commanderClient struct {
	cc *grpc.ClientConn
}

func NewCommanderClient(cc *grpc.ClientConn) CommanderClient {
	return &commanderClient{cc}
}

func (c *commanderClient) Execute(ctx context.Context, in *LBCommand, opts ...grpc.CallOption) (*LBCommandResult, error) {
	out := new(LBCommandResult)
	err := c.cc.Invoke(ctx, "/apis.Commander/Execute", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CommanderServer is the server API for Commander service.
type CommanderServer interface {
	// Sends a greeting
	Execute(context.Context, *LBCommand) (*LBCommandResult, error)
}

// UnimplementedCommanderServer can be embedded to have forward compatible implementations.
type UnimplementedCommanderServer struct {
}

func (*UnimplementedCommanderServer) Execute(ctx context.Context, req *LBCommand) (*LBCommandResult, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Execute not implemented")
}

func RegisterCommanderServer(s *grpc.Server, srv CommanderServer) {
	s.RegisterService(&_Commander_serviceDesc, srv)
}

func _Commander_Execute_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LBCommand)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CommanderServer).Execute(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/apis.Commander/Execute",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CommanderServer).Execute(ctx, req.(*LBCommand))
	}
	return interceptor(ctx, in, info, handler)
}

var _Commander_serviceDesc = grpc.ServiceDesc{
	ServiceName: "apis.Commander",
	HandlerType: (*CommanderServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Execute",
			Handler:    _Commander_Execute_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "agent_apis.proto",
}
